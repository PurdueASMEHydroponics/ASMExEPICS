// #include <SoftwareSerial.h>                           //we have to include the SoftwareSerial library, or else we can't use it
// #define rx_pH 19                                          //define what pin rx is going to be
// #define tx_pH 18                                          //define what pin tx is going to be

HardwareSerial& myserial_pH= Serial3;                   //define the serial port that communicates with the sensor
                                                        //Rx pin = 15
                                                        //Tx pin = 14
#ifdef USE_PULSE_OUT
  #include "do_iso_grav.h"       
  Gravity_DO_Isolated DO = Gravity_DO_Isolated(A0);         
#else
  #include "do_grav.h"
  Gravity_DO DO = Gravity_DO(A0);
#endif

uint8_t user_bytes_received = 0;
const uint8_t bufferlen = 32;
char user_data[bufferlen];

String inputstring = "";                              //a string to hold incoming data from the PC
String sensorstring_pH = "";                          //a string to hold the data from the Atlas Scientific product
boolean input_string_complete = false;                //have we received all the data from the PC
boolean sensor_string_complete = false;               //have we received all the data from the Atlas Scientific product
float pH;                                             //used to hold a floating point number that is the pH



void setup() {                                        //set up the hardware
  Serial.begin(9600);                                 //set baud rate for the hardware serial port_0 to 9600
  myserial_pH.begin(9600);                               //set baud rate for the software serial port to 9600
  inputstring.reserve(10);                            //set aside some bytes for receiving data from the PC
  sensorstring_pH.reserve(30);                           //set aside some bytes for receiving data from Atlas Scientific product
}


void serialEvent() {                                  //if the hardware serial port_0 receives a char
  inputstring = Serial.readStringUntil(13);           //read the string until we see a <CR>
  input_string_complete = true;                       //set the flag used to tell if we have received a completed string from the PC
}


void loop() {                                         //here we go...

  if (input_string_complete == true) {                //if a string from the PC has been received in its entirety
    myserial_pH.print(inputstring);                      //send that string to the Atlas Scientific product
    myserial_pH.print('\r');                             //add a <CR> to the end of the string
    inputstring = "";                                 //clear the string
    input_string_complete = false;                    //reset the flag used to tell if we have received a completed string from the PC
  }

  if (myserial_pH.available() > 0) {                     //if we see that the Atlas Scientific product has sent a character
    while (sensor_string_complete == false) {
      char inchar = (char)myserial_pH.read();              //get the char we just received
     if (inchar == '\r') {                             //if the incoming character is a <CR>
        sensor_string_complete = true;                  //set the flag
      } else {
        sensorstring_pH += inchar;  //add the char to the var called sensorstring
      }
    }
  }


  if (sensor_string_complete == true) {               //if a string from the Atlas Scientific product has been received in its entirety
    pH = sensorstring_pH.toFloat();
    Serial.print("pH value: ");
    Serial.println(pH);                     //send that string to the PC's serial monitor
    if (isdigit(sensorstring_pH[0])) {                   //if the first character in the string is a digit
      pH = sensorstring_pH.toFloat();                    //convert the string to a floating point number so it can be evaluated by the Arduino
      if (pH >= 7.0) {                                //if the pH is greater than or equal to 7.0
        Serial.println("pH is high");                       //print "high" this is demonstrating that the Arduino is evaluating the pH as a number and not as a string
      }
      if (pH <= 6.999) {                              //if the pH is less than or equal to 6.999
        Serial.println("pH is low");                        //print "low" this is demonstrating that the Arduino is evaluating the pH as a number and not as a string
      }
    }
    

    sensorstring_pH = "";                                //clear the string
    sensor_string_complete = false;                   //reset the flag used to tell if we have received a completed string from the Atlas Scientific product

    Serial.print("Dissolved Oxygen: ");
    Serial.println(DO.read_do_percentage());
    Serial.println();

    delay(1000);

  }
}
